3.1.15 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@options{ :@has_childrenT:
@linei:@children[o:Sass::Tree::ImportNode
;0;@:@imported_filename"shared;	i;
[ o:Sass::Tree::CommentNode:@silenti ;@:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;	i:
@loud0;
[ o:Sass::Tree::VariableNode:@guarded"!default:
@expro:Sass::Script::String	;@;"all;	i:
@type:identifier:
@name" default-transition-property;@;	i;
[ o;;"!default;o:Sass::Script::Number:@original"1s;@:@denominator_units[ ;i;	i:@numerator_units["s;" default-transition-duration;@;	i;
[ o;;"!default;o:Sass::Script::Bool;@;F;	i;" default-transition-function;@;	i;
[ o;;"!default;o;;@;F;	i;"default-transition-delay;@;	i;
[ o;;"!default;o:Sass::Script::List	;@;[o;	;@;"transform;	i;;o;	;@;"transform-origin;	i;;;	i:@separator:
comma;"#transitionable-prefixed-values;@;	i;
[ o;;i ;@;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;	i!;0;
[ o:Sass::Tree::MixinDefNode;"transition-property;@;T;	i0:
@args[[o:Sass::Script::Variable:@underscored_name"property_1;"property-1;@o;"	;#" default_transition_property;" default-transition-property;@;	i&[o;";#"property_2;"property-2;@o;;@;F;	i'[o;";#"property_3;"property-3;@o;;@;F;	i([o;";#"property_4;"property-4;@o;;@;F;	i)[o;";#"property_5;"property-5;@o;;@;F;	i*[o;";#"property_6;"property-6;@o;;@;F;	i+[o;";#"property_7;"property-7;@o;;@;F;	i,[o;";#"property_8;"property-8;@o;;@;F;	i-[o;";#"property_9;"property-9;@o;;@;F;	i.[o;";#"property_10;"property-10;@o;;@;F;	i/;
[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@options{ :@keywords{ :
@linei1:
@args[o:Sass::Script::Variable	:@underscored_name"property_1;
"property-1;@	;i1;@	;i1:@operand2o:Sass::Script::String	;@	:@value"string;i1:
@type:identifier0[o:Sass::Tree::VariableNode:@guarded0:
@expro;	
;
"unquote;@	;{ ;i1;[o;	;"property_1;
"property-1;@	;i1;
"property-1;@	;i1:@children[ o;;0;o:Sass::Script::Funcall
;"compact;@:@keywords{ ;	i2;![o;"	;#"property_1;"property-1;@;	i2o;"	;#"property_2;"property-2;@;	i2o;"	;#"property_3;"property-3;@;	i2o;"	;#"property_4;"property-4;@;	i2o;"	;#"property_5;"property-5;@;	i2o;"	;#"property_6;"property-6;@;	i2o;"	;#"property_7;"property-7;@;	i2o;"	;#"property_8;"property-8;@;	i2o;"	;#"property_9;"property-9;@;	i2o;"	;#"property_10;"property-10;@;	i2;"properties;@;	i2;
[ u;$¼[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ :
@linei30[o:Sass::Tree::PropNode;[" -webkit-transition-property;@	:
@tabsi :@prop_syntax:new:@valueo:Sass::Script::Funcall
;"prefixed-for-transition;@	:@keywords{ ;	i3:
@args[o:Sass::Script::String	;@	;"-webkit;	i3:
@type:identifiero; 	;"properties;"properties;@	;	i3;	i3:@children[ u;$¸[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ :
@linei40[o:Sass::Tree::PropNode;["-moz-transition-property;@	:
@tabsi :@prop_syntax:new:@valueo:Sass::Script::Funcall
;"prefixed-for-transition;@	:@keywords{ ;	i4:
@args[o:Sass::Script::String	;@	;"	-moz;	i4:
@type:identifiero; 	;"properties;"properties;@	;	i4;	i4:@children[ u;$°[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ :
@linei50[o:Sass::Tree::PropNode;["-o-transition-property;@	:
@tabsi :@prop_syntax:new:@valueo:Sass::Script::Funcall
;"prefixed-for-transition;@	:@keywords{ ;	i5:
@args[o:Sass::Script::String	;@	;"-o;	i5:
@type:identifiero; 	;"properties;"properties;@	;	i5;	i5:@children[ o:Sass::Tree::PropNode;["transition-property;@:
@tabsi :@prop_syntax:new;o;"	;#"properties;"properties;@;	i6;	i6;
[ o;;i ;@;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;	i9;0;
[ o; ;"transition-duration;@;T;	iH;![[o;";#"duration_1;"duration-1;@o;"	;#" default_transition_duration;" default-transition-duration;@;	i>[o;";#"duration_2;"duration-2;@o;;@;F;	i?[o;";#"duration_3;"duration-3;@o;;@;F;	i@[o;";#"duration_4;"duration-4;@o;;@;F;	iA[o;";#"duration_5;"duration-5;@o;;@;F;	iB[o;";#"duration_6;"duration-6;@o;;@;F;	iC[o;";#"duration_7;"duration-7;@o;;@;F;	iD[o;";#"duration_8;"duration-8;@o;;@;F;	iE[o;";#"duration_9;"duration-9;@o;;@;F;	iF[o;";#"duration_10;"duration-10;@o;;@;F;	iG;
[u;$Í[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@options{ :@keywords{ :
@lineiI:
@args[o:Sass::Script::Variable	:@underscored_name"duration_1;
"duration-1;@	;iI;@	;iI:@operand2o:Sass::Script::String	;@	:@value"string;iI:
@type:identifier0[o:Sass::Tree::VariableNode:@guarded0:
@expro;	
;
"unquote;@	;{ ;iI;[o;	;"duration_1;
"duration-1;@	;iI;
"duration-1;@	;iI:@children[ o;;0;o;%
;"compact;@;&{ ;	iJ;![o;"	;#"duration_1;"duration-1;@;	iJo;"	;#"duration_2;"duration-2;@;	iJo;"	;#"duration_3;"duration-3;@;	iJo;"	;#"duration_4;"duration-4;@;	iJo;"	;#"duration_5;"duration-5;@;	iJo;"	;#"duration_6;"duration-6;@;	iJo;"	;#"duration_7;"duration-7;@;	iJo;"	;#"duration_8;"duration-8;@;	iJo;"	;#"duration_9;"duration-9;@;	iJo;"	;#"duration_10;"duration-10;@;	iJ;"durations;@;	iJ;
[ o:Sass::Tree::MixinNode;"experimental;@;&{ ;	iM;![o;	;@;"transition-duration;	iK;;o;"	;#"durations;"durations;@;	iKo;	;@;"	-moz;	iL;;o;	;@;"-webkit;	iL;;o;	;@;"-o;	iL;;o:!Sass::Script::UnaryOperation	:@operator:not;@:@operando;	;@;"-ms;	iL;;;	iLo;,	;-;.;@;/o;	;@;"-khtml;	iL;;;	iLo;	;@;"official;	iL;;;
[ o;;i ;@;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;	iP;0;
[ o; ;"transition-timing-function;@;T;	i`;![[o;";#"function_1;"function-1;@o;"	;#" default_transition_function;" default-transition-function;@;	iV[o;";#"function_2;"function-2;@o;;@;F;	iW[o;";#"function_3;"function-3;@o;;@;F;	iX[o;";#"function_4;"function-4;@o;;@;F;	iY[o;";#"function_5;"function-5;@o;;@;F;	iZ[o;";#"function_6;"function-6;@o;;@;F;	i[[o;";#"function_7;"function-7;@o;;@;F;	i\[o;";#"function_8;"function-8;@o;;@;F;	i][o;";#"function_9;"function-9;@o;;@;F;	i^[o;";#"function_10;"function-10;@o;;@;F;	i_;
[o;;0;o;%
;"unquote;@;&{ ;	ia;![o;"	;#"function_1;"function-1;@;	ia;"function-1;@;	ia;
[ o;;0;o;%
;"compact;@;&{ ;	ib;![o;"	;#"function_1;"function-1;@;	ibo;"	;#"function_2;"function-2;@;	ibo;"	;#"function_3;"function-3;@;	ibo;"	;#"function_4;"function-4;@;	ibo;"	;#"function_5;"function-5;@;	ibo;"	;#"function_6;"function-6;@;	ibo;"	;#"function_7;"function-7;@;	ibo;"	;#"function_8;"function-8;@;	ibo;"	;#"function_9;"function-9;@;	ibo;"	;#"function_10;"function-10;@;	ib;"functions;@;	ib;
[ o;+;"experimental;@;&{ ;	ie;![o;	;@;"transition-timing-function;	ic;;o;"	;#"functions;"functions;@;	ico;	;@;"	-moz;	id;;o;	;@;"-webkit;	id;;o;	;@;"-o;	id;;o;,	;-;.;@;/o;	;@;"-ms;	id;;;	ido;,	;-;.;@;/o;	;@;"-khtml;	id;;;	ido;	;@;"official;	id;;;
[ o;;i ;@;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;	ih;0;
[ o; ;"transition-delay;@;T;	iw;![[o;";#"delay_1;"delay-1;@o;"	;#"default_transition_delay;"default-transition-delay;@;	im[o;";#"delay_2;"delay-2;@o;;@;F;	in[o;";#"delay_3;"delay-3;@o;;@;F;	io[o;";#"delay_4;"delay-4;@o;;@;F;	ip[o;";#"delay_5;"delay-5;@o;;@;F;	iq[o;";#"delay_6;"delay-6;@o;;@;F;	ir[o;";#"delay_7;"delay-7;@o;;@;F;	is[o;";#"delay_8;"delay-8;@o;;@;F;	it[o;";#"delay_9;"delay-9;@o;;@;F;	iu[o;";#"delay_10;"delay-10;@o;;@;F;	iv;
[u;$¾[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@options{ :@keywords{ :
@lineix:
@args[o:Sass::Script::Variable	:@underscored_name"delay_1;
"delay-1;@	;ix;@	;ix:@operand2o:Sass::Script::String	;@	:@value"string;ix:
@type:identifier0[o:Sass::Tree::VariableNode:@guarded0:
@expro;	
;
"unquote;@	;{ ;ix;[o;	;"delay_1;
"delay-1;@	;ix;
"delay-1;@	;ix:@children[ o;;0;o;%
;"compact;@;&{ ;	iy;![o;"	;#"delay_1;"delay-1;@;	iyo;"	;#"delay_2;"delay-2;@;	iyo;"	;#"delay_3;"delay-3;@;	iyo;"	;#"delay_4;"delay-4;@;	iyo;"	;#"delay_5;"delay-5;@;	iyo;"	;#"delay_6;"delay-6;@;	iyo;"	;#"delay_7;"delay-7;@;	iyo;"	;#"delay_8;"delay-8;@;	iyo;"	;#"delay_9;"delay-9;@;	iyo;"	;#"delay_10;"delay-10;@;	iy;"delays;@;	iy;
[ o;+;"experimental;@;&{ ;	i|;![o;	;@;"transition-delay;	iz;;o;"	;#"delays;"delays;@;	izo;	;@;"	-moz;	i{;;o;	;@;"-webkit;	i{;;o;	;@;"-o;	i{;;o;,	;-;.;@;/o;	;@;"-ms;	i{;;;	i{o;,	;-;.;@;/o;	;@;"-khtml;	i{;;;	i{o;	;@;"official;	i{;;;
[ o;;i ;@;["*/* Transition all-in-one shorthand */;	i;0;
[ o; ;"single-transition;@;T;	i;![	[o;";#"property;"property;@o;"	;#" default_transition_property;" default-transition-property;@;	i}[o;";#"duration;"duration;@o;"	;#" default_transition_duration;" default-transition-duration;@;	i~[o;";#"function;"function;@o;"	;#" default_transition_function;" default-transition-function;@;	i[o;";#"
delay;"
delay;@o;"	;#"default_transition_delay;"default-transition-delay;@;	i;
[o;+;"transition;@;&{ ;	i;![o;%
;"compact;@;&{ ;	i;![o;	;@;[	o;"	;#"property;"property;@;	io;"	;#"duration;"duration;@;	io;"	;#"function;"function;@;	io;"	;#"
delay;"
delay;@;	i;	i;:
space;
[ o; ;"transition;@;T;	i;![[o;";#"transition_1;"transition-1;@o;	;@;"default;	i;;[o;";#"transition_2;"transition-2;@o;;@;F;	i[o;";#"transition_3;"transition-3;@o;;@;F;	i[o;";#"transition_4;"transition-4;@o;;@;F;	i[o;";#"transition_5;"transition-5;@o;;@;F;	i[o;";#"transition_6;"transition-6;@o;;@;F;	i[o;";#"transition_7;"transition-7;@o;;@;F;	i[o;";#"transition_8;"transition-8;@o;;@;F;	i[o;";#"transition_9;"transition-9;@o;;@;F;	i[o;";#"transition_10;"transition-10;@o;;@;F;	i;
[u;$î[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:@underscored_name"transition_1:
@name"transition-1:@options{ :
@linei;@
;i:@operand2o:Sass::Script::String	;@
:@value"default;i:
@type:identifier0[o:Sass::Tree::VariableNode:@guarded0:
@expro:Sass::Script::Funcall
;"compact;@
:@keywords{ ;i:
@args[o:Sass::Script::List	;@
;[	o;		;
" default_transition_property;" default-transition-property;@
;io;		;
" default_transition_duration;" default-transition-duration;@
;io;		;
" default_transition_function;" default-transition-function;@
;io;		;
"default_transition_delay;"default-transition-delay;@
;i;i:@separator:
space;"transition-1;@
;i:@children[ o;;0;o;;@;F;	i;"transitions;@;	i;
[ u;$g[o:Sass::Script::Operation
:@operator:and:@operand1o; 
;:eq;o:Sass::Script::Funcall
:
@name"type-of:@options{ :@keywords{ :
@linei:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;"transition-1;@
;i;@
;i:@operand2o:Sass::Script::String	;@
:@value"	list;i:
@type:identifier;@
;i;o; 
;;	;o;

;"type-of;@
;{ ;i;[o;

;"nth;@
;{ ;i;[o;	;"transition_1;"transition-1;@
;io:Sass::Script::Number:@original"1;@
:@denominator_units[ ;i;i:@numerator_units[ ;@
;i;o;	;@
;"	list;i;;u:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:@guarded0:
@expro:Sass::Script::Funcall
:
@name"compact:@options{ :@keywords{ :
@linei:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;	"transition-1;
@
;io;	;"transition_2;	"transition-2;
@
;io;	;"transition_3;	"transition-3;
@
;io;	;"transition_4;	"transition-4;
@
;io;	;"transition_5;	"transition-5;
@
;io;	;"transition_6;	"transition-6;
@
;io;	;"transition_7;	"transition-7;
@
;io;	;"transition_8;	"transition-8;
@
;io;	;"transition_9;	"transition-9;
@
;io;	;"transition_10;	"transition-10;
@
;i;	"transitions;
@
;i:@children[ [o:Sass::Tree::VariableNode:@guarded0:
@expro;

;"	join;@
;{ ;i;[o;	;"transition_1;"transition-1;@
;io;

;"compact;@
;{ ;i;[o;	;"transition_2;"transition-2;@
;io;	;"transition_3;"transition-3;@
;io;	;"transition_4;"transition-4;@
;io;	;"transition_5;"transition-5;@
;io;	;"transition_6;"transition-6;@
;io;	;"transition_7;"transition-7;@
;io;	;"transition_8;"transition-8;@
;io;	;"transition_9;"transition-9;@
;io;	;"transition_10;"transition-10;@
;io;	;@
;"
comma;i;;;"transitions;@
;i:@children[ o;;0;o;%
;"comma-list;@;&{ ;	i;![ ;"delays;@;	i;
[ o;;0;o;;@;F;	i;"has-delays;@;	i;
[ o;;0;o;%
;"comma-list;@;&{ ;	i;![ ;"webkit-value;@;	i;
[ o;;0;o;%
;"comma-list;@;&{ ;	i;![ ;"moz-value;@;	i;
[ o;;0;o;%
;"comma-list;@;&{ ;	i;![ ;"o-value;@;	i;
[ o;;i ;@;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;	i ;0;
[ o:Sass::Tree::EachNode;@;T;	i¢:	@var"transition;
[o;;i ;@;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;	i£;0;
[ o;;0;o;%
;"nth;@;&{ ;	i¥;![o;"	;#"transition;"transition;@;	i¥o;;"1;@;[ ;i;	i¥;[ ;"property;@;	i¥;
[ o;;0;o;;@;F;	i¦;"duration;@;	i¦;
[ o;;0;o;;@;F;	i§;"timing-function;@;	i§;
[ o;;0;o;;@;F;	i¨;"
delay;@;	i¨;
[ u;$
[o:Sass::Script::Operation
:@operator:gt:@operand1o:Sass::Script::Funcall
:
@name"length:@options{ :@keywords{ :
@linei©:
@args[o:Sass::Script::Variable	:@underscored_name"transition;
"transition;@	;i©;@	;i©:@operand2o:Sass::Script::Number:@original"1;@	:@denominator_units[ :@valuei;i©:@numerator_units[ 0[o:Sass::Tree::VariableNode:@guarded0:
@expro;	
;
"nth;@	;{ ;i©;[o;	;"transition;
"transition;@	;i©o;;"2;@	;@;i;i©;[ ;
"duration;@	;i©:@children[ u;$[o:Sass::Script::Operation
:@operator:gt:@operand1o:Sass::Script::Funcall
:
@name"length:@options{ :@keywords{ :
@lineiª:
@args[o:Sass::Script::Variable	:@underscored_name"transition;
"transition;@	;iª;@	;iª:@operand2o:Sass::Script::Number:@original"2;@	:@denominator_units[ :@valuei;iª:@numerator_units[ 0[o:Sass::Tree::VariableNode:@guarded0:
@expro;	
;
"nth;@	;{ ;iª;[o;	;"transition;
"transition;@	;iªo;;"3;@	;@;i;iª;[ ;
"timing-function;@	;iª:@children[ u;$M[o:Sass::Script::Operation
:@operator:gt:@operand1o:Sass::Script::Funcall
:
@name"length:@options{ :@keywords{ :
@linei«:
@args[o:Sass::Script::Variable	:@underscored_name"transition;
"transition;@	;i«;@	;i«:@operand2o:Sass::Script::Number:@original"3;@	:@denominator_units[ :@valuei;i«:@numerator_units[ 0[o:Sass::Tree::VariableNode:@guarded0:
@expro;	
;
"nth;@	;{ ;i«;[o;	;"transition;
"transition;@	;i«o;;"4;@	;@;i	;i«;[ ;
"
delay;@	;i«:@children[ o;;0;o:Sass::Script::Bool;@	;T;i«;
"has-delays;@	;i«;[ o;;i ;@;[";/* If a delay is provided without a timing function */;	i­;0;
[ u;$^[o:Sass::Script::Operation
:@operator:and:@operand1o:Sass::Script::Funcall
:
@name"is-time:@options{ :@keywords{ :
@linei®:
@args[o:Sass::Script::Variable	:@underscored_name"timing_function;
"timing-function;@	;i®;@	;i®:@operand2o:!Sass::Script::UnaryOperation	;:not;@	:@operando;	;"
delay;
"
delay;@	;i®;i®0[o:Sass::Tree::VariableNode:@guarded0:
@expro;	;"timing_function;
"timing-function;@	;i®;
"
delay;@	;i®:@children[ o;;0;o:Sass::Script::Bool;@	:@valueF;i®;
"timing-function;@	;i®;[ o;;0;o;;@	;T;i®;
"has-delays;@	;i®;[ o;;i ;@;["9/* Keep a list of delays in case one is specified */;	i°;0;
[ o;;0;o;%
;"append;@;&{ ;	i±;![o;"	;#"delays;"delays;@;	i±o;%
;"if;@;&{ ;	i±;![o;"	;#"
delay;"
delay;@;	i±o;"	;#"
delay;"
delay;@;	i±o;;"0s;@;[ ;i ;	i±;["s;"delays;@;	i±;
[ o;;0;o;%
;"append;@;&{ ;	i³;![o;"	;#"webkit_value;"webkit-value;@;	i³o;%
;"compact;@;&{ ;	i³;![o;	;@;[o;%
;"prefixed-for-transition;@;&{ ;	i³;![o;	;@;"-webkit;	i³;;o;"	;#"property;"property;@;	i³o;"	;#"duration;"duration;@;	i³o;"	;#"timing_function;"timing-function;@;	i³;	i³;;0;"webkit-value;@;	i³;
[ o;;0;o;%
;"append;@;&{ ;	i´;![o;"	;#"moz_value;"moz-value;@;	i´o;%
;"compact;@;&{ ;	i´;![o;	;@;[	o;%
;"prefixed-for-transition;@;&{ ;	i´;![o;	;@;"	-moz;	i´;;o;"	;#"property;"property;@;	i´o;"	;#"duration;"duration;@;	i´o;"	;#"timing_function;"timing-function;@;	i´o;"	;#"
delay;"
delay;@;	i´;	i´;;0;"moz-value;@;	i´;
[ o;;0;o;%
;"append;@;&{ ;	iµ;![o;"	;#"o_value;"o-value;@;	iµo;%
;"compact;@;&{ ;	iµ;![o;	;@;[	o;%
;"prefixed-for-transition;@;&{ ;	iµ;![o;	;@;"-o;	iµ;;o;"	;#"property;"property;@;	iµo;"	;#"duration;"duration;@;	iµo;"	;#"timing_function;"timing-function;@;	iµo;"	;#"
delay;"
delay;@;	iµ;	iµ;;0;"o-value;@;	iµ;
[ :
@listo;"	;#"transitions;"transitions;@;	i¢u;$á[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ :
@linei¸0[o:Sass::Tree::PropNode;["-webkit-transition;@	:
@tabsi :@prop_syntax:new:@valueo; 	;"webkit_value;"webkit-value;@	;	i¸;	i¸:@children[ o:Sass::Tree::CommentNode:@silenti ;@	;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;	i¹:
@loud0;[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@underscored_name"has_delays:
@name"has-delays:@options{ :
@lineiº0[o:Sass::Tree::PropNode;["-webkit-transition-delay;@	:
@tabsi :@prop_syntax:new:@valueo; 	;"delays;"delays;@	;	iº;	iº:@children[ u;$#[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ :
@linei»0[o:Sass::Tree::PropNode;["-moz-transition;@	:
@tabsi :@prop_syntax:new:@valueo; 	;"moz_value;"moz-value;@	;	i»;	i»:@children[ u;$[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ :
@linei¼0[o:Sass::Tree::PropNode;["-o-transition;@	:
@tabsi :@prop_syntax:new:@valueo; 	;"o_value;"o-value;@	;	i¼;	i¼:@children[ o;';["transition;@;(i ;);*;o;"	;#"transitions;"transitions;@;	i½;	i½;
[ o;;i ;@;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;	iÀ;0;
[ o:Sass::Tree::FunctionNode;"comma-list;@;T;	iÁ;![[o;";#"	list;"	list;@o;	;@;[ ;	iÁ;;0;
[o:Sass::Tree::ReturnNode	;o;%
;"	join;@;&{ ;	iÂ;![o;	;@;[ ;	iÂ;;0o;"	;#"	list;"	list;@;	iÂo;	;@;"
comma;	iÂ;;;@;	iÂ;
[ o;;i ;@;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;	iÅ;0;
[ o;4;"prefixed-for-transition;@;T;	iÆ;![[o;";#"prefix;"prefix;@0[o;";#"property;"property;@0;
[u;$[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@options{ :@keywords{ :
@lineiÇ:
@args[o:Sass::Script::Variable	:@underscored_name"property;
"property;@	;iÇ;@	;iÇ:@operand2o:Sass::Script::String	;@	:@value"	list;iÇ:
@type:identifieru:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@name"
index:@options{ :@keywords{ :
@lineiÎ:
@args[o:Sass::Script::Variable	:@underscored_name"#transitionable_prefixed_values;"#transitionable-prefixed-values;@;	iÎo;	;"property;"property;@;	iÎu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:@underscored_name"property:
@name"property:@options{ :
@lineiÑ;
@;iÑ:@children[ [o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@whitespace_after0:@before0;@:@whitespace_beforei:@aftero;;0;o;;F;0;@;0;0;	iÏ:@originally_text:originally_text:	@mido:Sass::Script::String	;@:@value"-;	iÏ:
@type:identifier;@;0;0;	iÏ;F;o;	;"property;"property;@;	iÏ;	iÏ;F;o;	;"prefix;"prefix;@;	iÏ;@;	iÏ:@children[ [o:Sass::Tree::VariableNode:@guarded0:
@expro;	
;
"comma-list;@	;{ ;iÈ;[ ;
"new-list;@	;iÈ:@children[ o:Sass::Tree::EachNode;@	:@has_childrenT;iÉ:	@var"v;[o;;0;o;	
;
"append;@	;{ ;iÊ;[o;	;"new_list;
"new-list;@	;iÊo;	
;
"prefixed-for-transition;@	;{ ;iÊ;[o;	;"prefix;
"prefix;@	;iÊo;	;"v;
"v;@	;iÊ;
"new-list;@	;iÊ;[ :
@listo;	;"property;
"property;@	;iÉo:Sass::Tree::ReturnNode	;o;	;"new_list;
"new-list;@	;iÌ;@	;iÌ;[ o;;i ;@;["7/* Checks if the value given is a unit of time. */;	iÖ;0;
[ o;4;"is-time;@;T;	i×;![[o;";#"
value;"
value;@0;
[u;$ù[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@options{ :@keywords{ :
@lineiØ:
@args[o:Sass::Script::Variable	:@underscored_name"
value;
"
value;@	;iØ;@	;iØ:@operand2o:Sass::Script::String	;@	:@value"number;iØ:
@type:identifieru:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@options{ :@valueF:
@lineiÛ;@	;
iÛ:@children[ [o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	;:not;@	:@operando;	;;;@	;o;	
;
"
index;@	;{ ;iÙ;[o:Sass::Script::List	;@	;[o;	;@	;"s;iÙ;;o;	;@	;"ms;iÙ;;;iÙ:@separator:
spaceo;	
;
"	unit;@	;{ ;iÙ;[o;	;"
value;
"
value;@	;iÙ;iÙ;iÙ;@	;iÙ:@children[ 